
# ---------------------------------------------------------------------------
# "OrdererOrgs" - Definition of organizations managing orderer nodes
# 定于order
# ---------------------------------------------------------------------------
OrdererOrgs:
  # ---------------------------------------------------------------------------
  # Orderer
  # ---------------------------------------------------------------------------
  - Name: Orderer # 只用作标识
    Domain: example.com # 配置了生成证书的域
    EnableNodeOUs: true

    # ---------------------------------------------------------------------------
    # "Specs" - See PeerOrgs below for complete description
    # Domain和Specs合起来就是生成的证书主体的名称，即CN字段。
    # Specs可以配置多个，Cryptogen会为每个Spec生成一个MSP证书和一个TLS证书。
    # ---------------------------------------------------------------------------
    Specs: # 配置了证书的名
      - Hostname: orderer

# ---------------------------------------------------------------------------
# "PeerOrgs" - Definition of organizations managing peer nodes
# 定义组织集群，这里预制了两个组织
# ---------------------------------------------------------------------------
PeerOrgs:
  # ---------------------------------------------------------------------------
  # Org1
  # 创建组织一
  # 节点 2 个
  # 用户 1个
  # ---------------------------------------------------------------------------
  - Name: Org1
    Domain: org1.example.com
    EnableNodeOUs: true
    Template:
      Count: 2 
      # Count 定义了peer节点的个数。和order节点不同，peer节点的域名由templete默认配置。 
      # 规则为"peer%d" 其中%d由0到Count-1.如果Count为2，域名即为peer0.{ { Domain}}和peer1.{ { Domain}}
    Users:
      Count: 1 
      # 配置了非管理员用户的个数(管理员的证书默认生成)，现有用户一个

  # ---------------------------------------------------------------------------
  # Org2: See "Org1" for full specification
  # 创建组织二
  # 节点 2 个
  # 用户 1个
  # ---------------------------------------------------------------------------
  - Name: Org2
    Domain: org2.example.com
    EnableNodeOUs: true
    Template:
      Count: 2
    Users:
      Count: 1
